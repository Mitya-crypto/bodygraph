// app/api/telegram/webhook/route.ts
import { NextRequest, NextResponse } from 'next/server'
import { TELEGRAM_CONFIG, validateTelegramToken } from '@/lib/telegramConfig'

export async function POST(request: NextRequest) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if (!validateTelegramToken()) {
      console.error('‚ùå Invalid Telegram bot token')
      return NextResponse.json({ error: 'Invalid bot token' }, { status: 401 })
    }

    const body = await request.json()
    console.log('üì® Telegram webhook received:', body)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!body.message || !body.message.from) {
      return NextResponse.json({ ok: true })
    }

    const message = body.message
    const chatId = message.chat.id
    const text = message.text
    const userId = message.from.id
    const username = message.from.username || message.from.first_name

    console.log(`üë§ User ${username} (${userId}) sent: ${text}`)

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (text?.startsWith('/start')) {
      await sendMessage(chatId, TELEGRAM_CONFIG.messages.welcome, getMainMenu())
    } 
    else if (text?.startsWith('/help')) {
      await sendMessage(chatId, TELEGRAM_CONFIG.messages.help)
    }
    else if (text?.startsWith('/profile')) {
      await handleProfileCommand(chatId, userId)
    }
    else if (text?.startsWith('/numerology')) {
      await handleNumerologyCommand(chatId, userId)
    }
    else if (text?.startsWith('/astrology')) {
      await handleAstrologyCommand(chatId, userId)
    }
    else if (text?.startsWith('/humandesign')) {
      await handleHumanDesignCommand(chatId, userId)
    }
    else if (text === 'üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è') {
      await handleNumerologyCommand(chatId, userId)
    }
    else if (text === '‚ôà –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—è') {
      await handleAstrologyCommand(chatId, userId)
    }
    else if (text === 'üß¨ Human Design') {
      await handleHumanDesignCommand(chatId, userId)
    }
    else {
      // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
      await sendMessage(chatId, '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.')
    }

    return NextResponse.json({ ok: true })

  } catch (error) {
    console.error('‚ùå Telegram webhook error:', error)
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage(chatId: number, text: string, replyMarkup?: any) {
  try {
    const response = await fetch(`${TELEGRAM_CONFIG.botToken.replace('bot', 'https://api.telegram.org/bot')}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML',
        reply_markup: replyMarkup
      }),
    })

    if (!response.ok) {
      console.error('‚ùå Failed to send message:', await response.text())
    } else {
      console.log('‚úÖ Message sent successfully')
    }
  } catch (error) {
    console.error('‚ùå Error sending message:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
function getMainMenu() {
  return {
    inline_keyboard: [
      [
        { text: 'üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è', callback_data: 'numerology' },
        { text: '‚ôà –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—è', callback_data: 'astrology' }
      ],
      [
        { text: 'üß¨ Human Design', callback_data: 'humandesign' }
      ],
      [
        { text: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'profile' },
        { text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }
      ]
    ]
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async function handleProfileCommand(chatId: number, userId: number) {
  const message = `üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
${TELEGRAM_CONFIG.webAppUrl}

–¢–∞–º –≤—ã —Å–º–æ–∂–µ—Ç–µ:
‚Ä¢ –í–≤–µ—Å—Ç–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è
‚Ä¢ –£–∫–∞–∑–∞—Ç—å –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ

–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤!`
  
  await sendMessage(chatId, message, {
    inline_keyboard: [
      [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', url: TELEGRAM_CONFIG.webAppUrl }],
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
    ]
  })
}

async function handleNumerologyCommand(chatId: number, userId: number) {
  const message = `üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω)
3. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å "–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è"

–í—ã —É–∑–Ω–∞–µ—Ç–µ:
‚Ä¢ –ß–∏—Å–ª–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏
‚Ä¢ –ß–∏—Å–ª–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –ß–∏—Å–ª–æ –¥—É—à–∏
‚Ä¢ –ß–∏—Å–ª–æ –ª–∏—á–Ω–æ—Å—Ç–∏
‚Ä¢ –ë–∏–æ—Ä–∏—Ç–º—ã`

  await sendMessage(chatId, message, {
    inline_keyboard: [
      [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é', url: `${TELEGRAM_CONFIG.webAppUrl}/?module=numerology` }],
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
    ]
  })
}

async function handleAstrologyCommand(chatId: number, userId: number) {
  const message = `‚ôà –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω)
3. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å "–ê—Å—Ç—Ä–æ–ª–æ–≥–∏—è"

–í—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ –ù–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É
‚Ä¢ –ü–æ–∑–∏—Ü–∏–∏ –ø–ª–∞–Ω–µ—Ç
‚Ä¢ –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞
‚Ä¢ –î–æ–º–∞ –∏ –∞—Å–ø–µ–∫—Ç—ã
‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏`

  await sendMessage(chatId, message, {
    inline_keyboard: [
      [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—é', url: `${TELEGRAM_CONFIG.webAppUrl}/?module=astrology` }],
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
    ]
  })
}

async function handleHumanDesignCommand(chatId: number, userId: number) {
  const message = `üß¨ Human Design –∞–Ω–∞–ª–∏–∑

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Human Design –∞–Ω–∞–ª–∏–∑–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω)
3. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å "Human Design"

–í—ã —É–∑–Ω–∞–µ—Ç–µ:
‚Ä¢ –í–∞—à —Ç–∏–ø (–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –ü—Ä–æ–µ–∫—Ç–æ—Ä –∏ —Ç.–¥.)
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—é –∏ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç
‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å
‚Ä¢ –¶–µ–Ω—Ç—Ä—ã –∏ –∫–∞–Ω–∞–ª—ã
‚Ä¢ –í–æ—Ä–æ—Ç–∞ –∏ –ª–∏–Ω–∏–∏`

  await sendMessage(chatId, message, {
    inline_keyboard: [
      [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å Human Design', url: `${TELEGRAM_CONFIG.webAppUrl}/?module=humandesign` }],
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main_menu' }]
    ]
  })
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook)
export async function GET() {
  return NextResponse.json({ 
    message: 'Telegram webhook endpoint is working',
    timestamp: new Date().toISOString()
  })
}



