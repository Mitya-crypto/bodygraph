'use client'

import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import { useRouter } from 'next/navigation'
import { useAppStore } from '@/store/appStore'
import { Sparkles, Star, Zap, User, Crown } from 'lucide-react'
import { profileManager } from '@/lib/profileManager'
import ModernNumerologyWidget from './ModernNumerologyWidget'
import ModernHumanDesignWidget from './ModernHumanDesignWidget'
import ModernAstrologyWidget from './ModernAstrologyWidget'
import { calculateNumerology } from '@/lib/numerology'
import { calculateHumanDesign } from '@/lib/humanDesignCalculator'

export function WelcomeScreen() {
  const router = useRouter()
  const { userProfile, profileUpdateTrigger } = useAppStore()
  const [userData, setUserData] = useState<any>(null)
  const [isLoading, setIsLoading] = useState(true)
  
  console.log('üåü WelcomeScreen rendered')

  useEffect(() => {
    const loadUserData = async () => {
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ store –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∏–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let profile = userProfile
        
        if (!profile) {
          // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ fallback
          let telegramId = 123456789 // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          
          if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp?.initDataUnsafe?.user) {
            telegramId = (window as any).Telegram.WebApp.initDataUnsafe.user.id
          }
          
          const profiles = profileManager.getUserProfiles(telegramId)
          
          if (profiles.length > 0) {
            profile = profiles[0].profile // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
          }
        }
        
        if (profile) {
          
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é
          const numerologyData = calculateNumerology(
            profile.name,
            profile.birthDate
          )
          
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º Human Design
          const birthDate = new Date(profile.birthDate)
          const birthTime = new Date(`1970-01-01T${profile.birthTime}`)
          
          const humanDesignData = calculateHumanDesign({
            year: birthDate.getFullYear(),
            month: birthDate.getMonth() + 1,
            day: birthDate.getDate(),
            hour: birthTime.getHours(),
            minute: birthTime.getMinutes(),
            latitude: profile.coordinates?.lat || 55.7558,
            longitude: profile.coordinates?.lng || 37.6176
          })
          
          // –ü–æ–ª—É—á–∞–µ–º –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
          const astrologyData = {
            sunSign: getSunSign(new Date(profile.birthDate)),
            moonSign: getMoonSign(new Date(profile.birthDate)),
            risingSign: getRisingSign(new Date(profile.birthDate), profile.coordinates?.lat || 55.7558)
          }
          
          setUserData({
            numerology: numerologyData,
            humanDesign: humanDesignData,
            astrology: astrologyData
          })
        } else {
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è
          setUserData({
            numerology: { lifePath: 5, expression: 3, soulUrge: 2, personality: 1 },
            humanDesign: { type: 'Reflector', strategy: 'Wait for the Lunar Cycle', authority: 'Environmental', profile: '1/3', definition: 'No Definition' },
            astrology: { sunSign: '–ë–ª–∏–∑–Ω–µ—Ü—ã', moonSign: '–õ–µ–≤', risingSign: '–°–∫–æ—Ä–ø–∏–æ–Ω' }
          })
        }
      } catch (error) {
        console.error('Error loading user data:', error)
        // Fallback –∫ —Ç–µ—Å—Ç–æ–≤—ã–º –¥–∞–Ω–Ω—ã–º
        setUserData({
          numerology: { lifePath: 5, expression: 3, soulUrge: 2, personality: 1 },
          humanDesign: { type: 'Reflector', strategy: 'Wait for the Lunar Cycle', authority: 'Environmental', profile: '1/3', definition: 'No Definition' },
          astrology: { sunSign: '–ë–ª–∏–∑–Ω–µ—Ü—ã', moonSign: '–õ–µ–≤', risingSign: '–°–∫–æ—Ä–ø–∏–æ–Ω' }
        })
      } finally {
        setIsLoading(false)
      }
    }
    
    loadUserData()
  }, [userProfile, profileUpdateTrigger])

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞
  const getSunSign = (birthDate: Date) => {
    const month = birthDate.getMonth() + 1
    const day = birthDate.getDate()
    
    if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return '–û–≤–µ–Ω'
    if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return '–¢–µ–ª–µ—Ü'
    if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return '–ë–ª–∏–∑–Ω–µ—Ü—ã'
    if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return '–†–∞–∫'
    if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return '–õ–µ–≤'
    if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return '–î–µ–≤–∞'
    if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return '–í–µ—Å—ã'
    if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return '–°–∫–æ—Ä–ø–∏–æ–Ω'
    if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return '–°—Ç—Ä–µ–ª–µ—Ü'
    if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return '–ö–æ–∑–µ—Ä–æ–≥'
    if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return '–í–æ–¥–æ–ª–µ–π'
    return '–†—ã–±—ã'
  }

  const getMoonSign = (birthDate: Date) => {
    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç –∑–Ω–∞–∫–∞ –õ—É–Ω—ã
    const signs = ['–û–≤–µ–Ω', '–¢–µ–ª–µ—Ü', '–ë–ª–∏–∑–Ω–µ—Ü—ã', '–†–∞–∫', '–õ–µ–≤', '–î–µ–≤–∞', '–í–µ—Å—ã', '–°–∫–æ—Ä–ø–∏–æ–Ω', '–°—Ç—Ä–µ–ª–µ—Ü', '–ö–æ–∑–µ—Ä–æ–≥', '–í–æ–¥–æ–ª–µ–π', '–†—ã–±—ã']
    const dayOfYear = Math.floor((birthDate.getTime() - new Date(birthDate.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24))
    return signs[dayOfYear % 12]
  }

  const getRisingSign = (birthDate: Date, latitude: number) => {
    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç –≤–æ—Å—Ö–æ–¥—è—â–µ–≥–æ –∑–Ω–∞–∫–∞
    const signs = ['–û–≤–µ–Ω', '–¢–µ–ª–µ—Ü', '–ë–ª–∏–∑–Ω–µ—Ü—ã', '–†–∞–∫', '–õ–µ–≤', '–î–µ–≤–∞', '–í–µ—Å—ã', '–°–∫–æ—Ä–ø–∏–æ–Ω', '–°—Ç—Ä–µ–ª–µ—Ü', '–ö–æ–∑–µ—Ä–æ–≥', '–í–æ–¥–æ–ª–µ–π', '–†—ã–±—ã']
    const hour = birthDate.getHours()
    const signIndex = Math.floor((hour + latitude / 10) % 12)
    return signs[signIndex]
  }

  const handleManageProfiles = () => {
    // –ö–Ω–æ–ø–∫–∞ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è–º–∏" –¥–æ–ª–∂–Ω–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —ç–∫—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—è
    console.log('üë§ Managing profiles - going to profile screen')
    router.push('/profile')
  }

  return (
    <div className="min-h-screen p-6 flex items-center justify-center relative z-10">
      <div className="max-w-2xl mx-auto text-center">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-8"
        >
          <div className="flex justify-center mb-6">
            <div className="relative">
              <div className="w-24 h-24 bg-gradient-to-br from-cosmic-500 to-cosmic-700 rounded-full flex items-center justify-center">
                <Star className="w-12 h-12 text-white" />
              </div>
              <motion.div
                animate={{ rotate: 360 }}
                transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
                className="absolute -inset-2 border-2 border-cosmic-400 border-dashed rounded-full"
              />
            </div>
          </div>
          
          <h1 className="cosmic-title text-4xl mb-4">
            –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –ë–æ–¥–∏–≥—Ä–∞—Ñ
          </h1>
          <p className="cosmic-text text-lg">
            –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–π–Ω—ã –≤–∞—à–µ–π –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—é, Human Design –∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—é
          </p>
        </motion.div>

        {/* Features */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8"
        >
          {isLoading ? (
            <div className="col-span-3 cosmic-card p-6">
              <div className="animate-pulse">
                <div className="h-4 bg-space-700 rounded mb-2"></div>
                <div className="h-4 bg-space-700 rounded mb-4"></div>
                <div className="h-8 bg-space-700 rounded"></div>
              </div>
              <p className="text-cosmic-500 text-sm mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫...</p>
            </div>
          ) : (
            <>
              <div className="cosmic-card">
                <ModernNumerologyWidget
                  lifePathNumber={userData?.numerology?.lifePath || 5}
                  expressionNumber={userData?.numerology?.expression || 3}
                  soulUrgeNumber={userData?.numerology?.soulUrge || 2}
                  personalityNumber={userData?.numerology?.personality || 1}
                  language="ru"
                />
              </div>
              
              <div className="cosmic-card">
                <ModernHumanDesignWidget
                  type={userData?.humanDesign?.type || "Reflector"}
                  strategy={userData?.humanDesign?.strategy || "Wait for the Lunar Cycle"}
                  authority={userData?.humanDesign?.authority || "Environmental"}
                  profile={userData?.humanDesign?.profile || "1/3"}
                  definition={userData?.humanDesign?.definition || "No Definition"}
                  language="ru"
                />
              </div>
              
              <div className="cosmic-card">
                <ModernAstrologyWidget
                  sunSign={userData?.astrology?.sunSign || "–ë–ª–∏–∑–Ω–µ—Ü—ã"}
                  moonSign={userData?.astrology?.moonSign || "–õ–µ–≤"}
                  risingSign={userData?.astrology?.risingSign || "–°–∫–æ—Ä–ø–∏–æ–Ω"}
                  language="ru"
                />
              </div>
            </>
          )}
        </motion.div>

        {/* Action Buttons */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6 }}
          className="space-y-4"
        >
          <a 
            href="/modules"
            className="cosmic-button bg-cosmic-500 hover:bg-cosmic-600 text-white text-xl px-8 py-4 w-full rounded-xl transition-colors cursor-pointer inline-block text-center"
          >
            –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ
          </a>

          <motion.button
            onClick={handleManageProfiles}
            className="cosmic-button bg-space-700 hover:bg-space-600 text-cosmic-200 text-lg px-6 py-3 w-full flex items-center justify-center gap-2"
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
          >
            <User className="w-5 h-5" />
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è–º–∏
          </motion.button>
        </motion.div>
      </div>
    </div>
  )
}